
events {
    worker_connections  1024;
}


http {

    # always redirect to https
    server {
      listen 80 default_server;
    
      server_name  _;
    
      location ~ /.well-known/acme-challenge {
        root /var/www/certbot;
      }
    
      return 301 https://$host$request_uri;
      
    }

    server {
        listen 443 ssl;

        # use the certificates;
        ssl_certificate /etc/letsencrypt/live/llm.helenfit.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/llm.helenfit.com/privkey.pem;
        server_name llm.helenfit.com;

        # After using proxy_pass, the follwing header should be added to avoid CORS.
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;

        # server_name 112.121.115.41;  # 替換成你的域名

        location ~ /.well-known/acme-challenge {
            root /var/www/certbot;
        }
        # location / {
        #     proxy_pass http://helloworld2:8000;
        # }

        location / {
            if ($request_method = 'OPTIONS') {
                # OPTIONS req return should add the follwing header
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Length' 0;
                return 204;
            }
            # proxy_pass http://112.121.115.41:17281;  # 前端位置
            # proxy_pass http://10.202.0.2:17281;  # 前端位置
            proxy_pass http://172.31.37.133:17281;  # 前端位置, awsjdp

        }

        location /v1 {
            if ($request_method = 'OPTIONS') {
                # OPTIONS req return should add the follwing header
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Length' 0;
                return 204;
            }
            # proxy_pass http://112.121.115.41:31244;  # 後端api位置
            proxy_pass http://172.31.37.133:31244;  # 後端api位置

        }
        
        location /db {
            if ($request_method = 'OPTIONS') {
                # OPTIONS req return should add the follwing header
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Length' 0;
                return 204;
            }
            # proxy_pass http://112.121.115.41:38018;  # 後端db位置
            proxy_pass http://172.31.37.133:38018;  # 後端db位置

        }
        
    }
}
